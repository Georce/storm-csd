#!/bin/bash

set -eux

source=storm.properties
nimbus_list=nimbus.list
target=storm.yaml
orig=.storm.yaml.orig
stamp=.stamp-config

function properties_yaml {
    while read line; do
        if [[ ! $line =~ ([a-z0-9._]+)=(.*) ]]; then
            echo "Ignoring line: $line" >&2
            continue
        fi
        local k="${BASH_REMATCH[1]}"
        local v="${BASH_REMATCH[2]}"

        case "$k" in
        supervisor.slots.ports)
            local ports=$(tr , ' ' <<< "$v")
            v=$'\n'
            for port in $ports; do
                v+=" - $port"$'\n'
            done
            v=${v::-1} # remove trailing newline
            ;;
        esac

        printf '%s: %s\n' "$k" "$v"
    done < "$source"
}

function zookeeper_yaml {
    echo 'storm.zookeeper.servers:'
    local x host port oldport=
    for x in $ZK_QUORUM; do
        # XXX is this space separated?
        read host port < <(tr : ' ' <<< "$x")
        echo " - $host"
        if [[ -n $oldport && $port != $oldport ]]; then
            echo "Zookeeper ensemble must all use the same port: $ZK_QUORUM" >&2
            return 1
        fi
        oldport=$port
    done

    echo "storm.zookeeper.port: $port"
}

function nimbus_yaml {
    local nimbus=
    while read line; do
        if [[ -n $nimbus ]]; then
            echo 'You have more than one Nimbus... this should not be possible!' >&2
            return 1
        fi
        nimbus=$(cut -d : -f 1 <<< "$line")
    done < "$nimbus_list"
    echo "nimbus.host: $nimbus"
}

function to_yaml {
    properties_yaml
    zookeeper_yaml
    nimbus_yaml
}

# Operate idempotently
if [[ -f "$stamp" ]]; then
    exit 0
fi

mv "$target" "$orig"
to_yaml > "$target"
cat "$orig" >> "$target"

printf $'#\n# storm.yaml follows:\n#\n'
cat "$target"
printf $'#\n#\n#\n'

touch "$stamp"
